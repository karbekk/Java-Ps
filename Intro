// Java packages :

/*

Java : The underlying basic is its a programming languages even though there are variations in its runtime environments. 

In general, runtinme env refer to as Java SE - Java Standard edition which is kind of a basic environment.

But, Oracle provides other runtime env which are subsets of SE : Jave Entrprise edition (EE), Java ME, Java FX,

There are even the runtimes that are not tied to oracle. Andriod is the one. It provides diff runtime to the std runtime from oracle.

But whatever the runtimes, they all support the same Java pgm langauage.


JVM, JRE, JDK:

JVM : Interpreter to process line by line java code
JRE : JVM + Run time plus libraries
JDK : JRE + Dev tools


Java packages provide organisations within a java program.
lang convention : All lowercase

a global package :

package com.example;

a custom package :

package com.example.myproj


a group package:

package com.example.management


Folder structure :
If the package name is com.company.example then, folder structure would be 

src -> com -> company -> example -> main.java 

NOTE : In, Intellij Idea

your project structure was src/main/java/start.java but when you added it to IntelliJ you have set src as a source folder, so IntelliJ put main.java as a package.

In Project Setting (Ctrl+Shift+Alt+S) -> Modules -> Sources tab set src/main/java as Source Folder.
In Intellij Idea - check File > ProjectStructure > ProjectSettings > Modules > Sources - your folder must be marked as a "Source". Also you should update your Run > EditConfigurations > Configuration > Main class to correspond with your package

------------------------------------------------------------------------------------
strongly typed - cant mix the diff variable types. Variables have fixed data type.
weakly typed - variables dont really have a type

static typing - must be declared before using
dynamic typing - use without declaration on the fly
--------------------------------------------------------------------------------
byte,short,int,float,double,char

if a variable is assigned a value and then another var is created and assogned 1st var, java creates 2 seperate 
memory spaces. So we can change both of them later.

----------------------------------------------------------------------------------
Control structures -> conditions or decisions -> loops
operators -> logical -> relational or comparisons
